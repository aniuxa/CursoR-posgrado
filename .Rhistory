m*weights*t(18)
weights*t(18)
weights<-rep(1, times=18)# Son 18 items
weights[12:14]<-2 # le damos más peso a los items 12 al 14
weights<-as_tibble(weights)
weights %>% slice(rep(1:n(), each =length(index3$id_muj) ))
rep(weights, length(index3$id_muj))
rbind(weights)[rep(1,length(index3$id_muj)), ]
rep(weights,length(index3$id_muj))
rep.row <-function(x,n){
matrix(rep(x, n), nrow = n, byrow = T)
}
rep.row(weights,length(index3$id_muj))
weights<-rep(1, times=18)# Son 18 items
weights[12:14]<-2 # le damos más peso a los items 12 al 14
rep.row(weights,length(index3$id_muj))
source('C:/Users/anaes/Dropbox/2021/MEG/repo-MEG/P5.R', encoding = 'WINDOWS-1252', echo=TRUE)
#==============================================================================
# Fecha: 2021-04-07
# Ejemplo de construcción de un índice
# ==============================================================================
# Paquetes                        ----------------------------------------------
if (!require("pacman")) install.packages("pacman")#instala pacman si se requiere
pacman::p_load(tidyverse,
readxl,writexl,googlesheets4, # importar hojas de cálculo
haven, foreign, # importacón de dta y sav
sjlabelled, GGally, RColorBrewer, # etiquetas
janitor, skimr, # Limpieza
esquisse, stringr)
# Datos                   -----------------------------------------------
BD_MUJERES_ENDIREH2016_sample <- read_dta("https://github.com/aniuxa/repo-MEG/raw/main/datos/BD_MUJERES_ENDIREH2016_sample.dta")
## Etiquetas de la práctica anterior -----------------------------------
sit_conyugal.lab<-c("casada-unida",  "Unida+pareja ausente", "Separada o Divorciada",
"viuda", "Soltera + novio", "Soltera con ex", "Soltera nunca novio")
BD_MUJERES_ENDIREH2016_sample$sit_conyugal<-set_labels(BD_MUJERES_ENDIREH2016_sample$sit_conyugal,
labels=sit_conyugal.lab) # establece las etiquetas
niv.shortlab <- c("Ninguna", "Preescolar", "Primaria", "Secundaria", "Prepa", "Técnico -pri",
"Técnico -sec", "Técnico -prepa", "Normal", "Normal-lic",
"Licenciatura", "Posgrado") #Vector de etiquetas cortas.
BD_MUJERES_ENDIREH2016_sample$niv<-set_labels(BD_MUJERES_ENDIREH2016_sample$niv,
labels=niv.shortlab) # establece las etiquetas
freq.shortlab <- c("muchas veces", "pocas veces", "una vez",
"no ocurrió", "no_especificado") #Vector de etiquetas cortas.
BD_MUJERES_ENDIREH2016_sample <- BD_MUJERES_ENDIREH2016_sample %>%
dplyr::mutate_at(vars(p13_1_1:p13_1_22), ~ set_labels(.x, labels=freq.shortlab))
si_no<-c("Sí", "No", "No especificado")
# IMPORTANTE: REVISAR SI LAS VARIABLES SON NUMÉRICAS, NO SE PUEDE ETIQUETAR UNA VARIABLE NO NUMÉRICA
BD_MUJERES_ENDIREH2016_sample <- BD_MUJERES_ENDIREH2016_sample %>%
dplyr::mutate_at(vars(p12_1_1_1:p12_1_1_29), ~ as.numeric(.x) ) %>%  # Vuelve numérico
dplyr::mutate_at(vars(p12_1_1_1:p12_1_1_29), ~ set_labels(.x, labels=si_no))
class(BD_MUJERES_ENDIREH2016_sample$p12_1_1_30)
table(BD_MUJERES_ENDIREH2016_sample$p12_1_1_30)
BD_MUJERES_ENDIREH2016_sample <- BD_MUJERES_ENDIREH2016_sample %>%
dplyr::mutate_at(vars(starts_with("p13_1_")), ~ set_labels(.x, labels=freq.shortlab))
## Vamos a construir indices con los valores los primeros 22 items de la sección 13 ---
index <-  BD_MUJERES_ENDIREH2016_sample %>%
filter(sit_conyugal<7) %>% # Ojo!!!!!!! Siempre checar a quién le toca la sección
select(id_muj, p13_1_1:p13_1_22) %>% # Vamos a hacer una base chiquita con el id y los items relevantes
dplyr::mutate_at(vars(p13_1_1:p13_1_22), ~na_if(.x, 9)) %>%  # manda los 9 a missing
dplyr::mutate_at(vars(p13_1_1:p13_1_22), ~ (4 - .x))  # cambia la lógica de la numeración a 4 se le resta el valor. Cambia sentido
# Hoy hacemos el índice
index<- index %>%
mutate(index= rowMeans(across(p13_1_1:p13_1_22), na.rm = T)) %>%
mutate(index=index/3) # nos quedan una metrica del 0 al 3
hist(index$index)
index<-index %>%
select(id_muj,index)
# Plan con maña
BD_MUJERES_ENDIREH2016_sample<-BD_MUJERES_ENDIREH2016_sample %>%
merge(index, by="id_muj", all.x = T)
# Un segundo índice -----
# Para el ámbito laboral
# Ojo está sección tiene un filtro inicial: sólo mujeres que han trabajado
index2 <-  BD_MUJERES_ENDIREH2016_sample %>%
filter(p7_1==1) %>% # Ojo!!!!!!! Siempre checar a quién le toca la sección
select(id_muj, p7_9_1:p7_9_18) %>% # Vamos a hacer una base chiquita con el id y los items relevantes
dplyr::mutate_at(vars(p7_9_1:p7_9_18), ~na_if(.x, 9)) %>%  # manda los 9 a missing
dplyr::mutate_at(vars(p7_9_1:p7_9_18), ~ (2 - .x))  # cambia la lógica de la numeración a 2 se le resta el valor. Cambia sentido
# Hoy hacemos el índice
index2<- index2 %>%
mutate(index2= rowMeans(across(p7_9_1:p7_9_18), na.rm = T)) # Ojo aquí no dividimos porque sólo mide si se dio la situación
hist(index2$index2)
index2<- index2 %>%
select(id_muj, index2)
BD_MUJERES_ENDIREH2016_sample<-BD_MUJERES_ENDIREH2016_sample %>%
merge(index2, by="id_muj", all.x = T)
summary(BD_MUJERES_ENDIREH2016_sample$index)
summary(BD_MUJERES_ENDIREH2016_sample$index2)
# Un tercer índice.... con operaciones de matrices para los pesos.
# Supongamos que el anterior
index3 <-  BD_MUJERES_ENDIREH2016_sample %>%
filter(p7_1==1) %>% # Ojo!!!!!!! Siempre checar a quién le toca la sección
select(id_muj, p7_9_1:p7_9_18) %>% # Vamos a hacer una base chiquita con el id y los items relevantes
dplyr::mutate_at(vars(p7_9_1:p7_9_18), ~na_if(.x, 9)) %>%  # manda los 9 a missing
dplyr::mutate_at(vars(p7_9_1:p7_9_18), ~ (2 - .x))  # cambia la lógica de la numeración
weights<-rep(1, times=18)# Son 18 items
weights[12:14]<-2 # le damos más peso a los items 12 al 14
weights*diag(18)
m<-matrix(1:26, nrow = 2)
View(m)
m<-matrix(1:26, nrow = 2, byrow=T)
weights*diag(18)
m*(weights*diag(18))
(weights*diag(18))*m
m<-matrix(1:36, nrow = 2, byrow=T)
(weights*diag(18))*m
m*(weights*diag(18))
dim(m)
dim(weights*diag(18))
dummy<-(weights*diag(18))
dummy*m
m*dummy
m*weights
m*weights-m
weights<-matrix<-(weights, nrow=1)
weights<-matrix<-matrix(weights, nrow=1)
m*weights-m
m*weights
weights*m
weights<-rep(1, times=18)# Son 18 items
weights[12:14]<-2 # le damos más peso a los items 12 al 14
weights<-matrix<-matrix(weights, ncol=1)
View(weights)
weights*m
m*weights
weights<-rep(1, times=18)# Son 18 items
weights[12:14]<-2 # le damos más peso a los items 12 al 14
m<-matrix(1:36, nrow = 2, byrow=T)
dummy<-(weights*diag(18))
m*weights
m*weights-m
m<-matrix(c(1:18, 1:18), nrow = 2, byrow=T)
dummy<-(weights*diag(18))
m*weights-m
dim(weights)<-c(1,18)
weights<-rep(1, times=18)# Son 18 items
weights[12:14]<-2 # le damos más peso a los items 12 al 14
dim(weights)<-c(1,18)
m<-matrix(c(1:18, 1:18), nrow = 2, byrow=T)
dummy<-(weights*diag(18))
m*weights-m
weights<-rep(1, times=18)# Son 18 items
weights[12:14]<-2 # le damos más peso a los items 12 al 14
dim(weights)<-c(18,1)
m<-matrix(c(1:18, 1:18), nrow = 2, byrow=T)
dummy<-(weights*diag(18))
m*weights-m
View(dummy)
m*weights-m
weights<-rep(1, times=18)# Son 18 items
weights[12:14]<-2 # le damos más peso a los items 12 al 14
m<-matrix(c(1:18, 1:18), nrow = 2, byrow=T)
m
dummy<-(weights*diag(18))
m*dummy-m
dim(dummy)
m*dummy
dummy*m
dim(m)
m*weights
weights
dim(weights)<-(1,18)
dim(weights)<-c(18,1)
View(weights)
m*weights
weights*m
weights<-rep(1, times=18)# Son 18 items
weights[12:14]<-2 # le damos más peso a los items 12 al 14
weights
solve(weights)
solve(dummy)
m*weights
m*as.matrix(weights)
m*weights
prod(m,weights)
cross(m,weights)
cross(weights,m)
pacman::p_load(tidyverse,
readxl,writexl,googlesheets4, # importar hojas de cálculo
haven, foreign, # importacón de dta y sav
sjlabelled, GGally, RColorBrewer, # etiquetas
janitor, skimr, # Limpieza
esquisse, stringr, pracma)
pracma::cross(weights,m)
weights%*%m
m%*%weights
m%*%dummy
(m%*%dummy)-m
index[,-1]%*%dummy
index3[,-1]%*%dummy
View(index3)
View(dummy)
index3[,-1]
dim(index3[,-1])
index3[,-1]%*%dummy
as.matrix(index3[,-1])%*%dummy
rowSums(as.matrix(index3[,-1])%*%dummy)
index<-rowSums(as.matrix(index3[,-1])%*%dummy)
index_weight<-rowSums(as.matrix(index3[,-1])%*%dummy)
index3<-cbind(index3, index_weight)
View(index3)
index_weight<-rowSums(as.matrix(index3[,-1])%*%dummy)/sum(weights)
index3<-index3 %>%  select(id_muj, index_weight)
BD_MUJERES_ENDIREH2016_sample<-BD_MUJERES_ENDIREH2016_sample %>%
merge(index3, by="id_muj", all.x = T)
View(BD_MUJERES_ENDIREH2016_sample)
source('C:/Users/anaes/Dropbox/2021/MEG/repo-MEG/P5.R', encoding = 'WINDOWS-1252', echo=TRUE)
source('C:/Users/anaes/Dropbox/2021/MEG/repo-MEG/P5.R', encoding = 'WINDOWS-1252', echo=TRUE)
summary(BD_MUJERES_ENDIREH2016_sample$index2)
summary(BD_MUJERES_ENDIREH2016_sample$index_weight)
index3<-index3 %>%select(id_muj, index_weight) %>% mutate(index3=index_weight/sum(weights))
source('C:/Users/anaes/Dropbox/2021/MEG/repo-MEG/P5.R', encoding = 'WINDOWS-1252', echo=TRUE)
summary(BD_MUJERES_ENDIREH2016_sample$index2)
summary(BD_MUJERES_ENDIREH2016_sample$index3)
weights
sum(weights)
View(BD_MUJERES_ENDIREH2016_sample)
is.na(list(c(NA)))
is.na(list(c(NA, NA)))
is.na(list(list(NA)))
rm(list=ls()) ### borra objetos en el ambiente
# Paquetes                        ----------------------------------------------
if (!require("pacman")) install.packages("pacman")#instala pacman si se requiere
#cargan los paquetes necesario. No se utilizan todos
pacman::p_load(tidyverse, tm, NLP, SnowballC, wordcloud, ggwordcloud,
quanteda, udpipe, igraph, ggraph,
sjlabelled, RColorBrewer, readxl, janitor, textrank,
broom, wesanderson, epubr, pdftools)
# datos                         ----------------------------------------------
path<-"https://raw.githubusercontent.com/aniuxa/CursoR-posgrado-pol/master/datos/amlo_abri.txt" # txt
udmodel <- udpipe_download_model(language = "spanish")  # esto trabaja con la estructura del español
text <- readLines(path)
amlo<-udpipe(x = text, object=udmodel) #"tokeniza" el texto
# Primeros análisis
stats<- amlo %>%
filter(upos=="NOUN")
stats.freq <- txt_freq(stats$token)
stats.freq$key <- factor(stats.freq$key, levels = rev(stats.freq$key)) # ordena
stats.freq[1:25,] %>%
ggplot(aes(x=key, y=freq)) +geom_bar(stat="identity") +
coord_flip() + labs(y="Frecuencia", x="Sustantivo") + theme_minimal()
# Primeros análisis
View(amlo)
set.seed(42) # tiene un elemento aleatorio
stats.freq[1:25,] %>%
ggplot(aes(label=key, size=freq)) +  geom_text_wordcloud() +
theme_minimal()
set.seed(42) # tiene un elemento aleatorio
stats.freq[1:25,] %>%
ggplot(
aes(
label =key, size = freq,
color = factor(sample.int(15, nrow(stats.freq[1:25,]), replace = TRUE))
)
) +
geom_text_wordcloud_area() +
scale_size_area(max_size = 12) +
theme_minimal()
set.seed(1234)
paleta_color<-wes_palette(n=5,
name="Darjeeling1",
type="continuous")
wordcloud(words = stats.freq$key, freq = stats.freq$freq,
min.freq = 5,
max.words=200,
random.order=FALSE,
colors=paleta_color)
stats<- amlo %>%
filter(!upos%in%no_upos) %>%  #selecciona todos menos estos tipos
mutate(token=tolower(token)) %>% # cambia a que token no tenga mayúsculas
filter(!token%in%stop)  # selecciona todas las palabras menos las que están en nuestro vector "stop"
stats.freq <- txt_freq(stats$token)
stats.freq$key <- factor(stats.freq$key, levels = rev(stats.freq$key)) # ordena
stats.freq[1:25,] %>%
ggplot(aes(x=key, y=freq)) +geom_bar(stat="identity") +
coord_flip() + labs(y="Frecuencia", x="Palabra") + theme_minimal()
View(stats)
cooc <- stats %>%
filter(upos %in% c("NOUN", "ADJ") %>%
cooccurrence(x =  .,
term = "lemma",
group = c("doc_id", "paragraph_id", "sentence_id"))
head(cooc)
group = c("doc_id", "paragraph_id", "sentence_id"))
))
cooc <- stats %>%
filter(upos %in% c("NOUN", "ADJ")) %>%
cooccurrence(.,
term = "lemma",
group = c("doc_id", "paragraph_id", "sentence_id"))
head(cooc)
wordnetwork <- cooc[1:30, ] # nos quedan las primera 30 lineas
wordnetwork <- graph_from_data_frame(wordnetwork)
ggraph(wordnetwork, layout = "fr") +
geom_edge_link(aes(width = cooc, edge_alpha = cooc), edge_colour = "pink") +
geom_node_text(aes(label = name), col = "darkgreen", size = 4) +
theme_graph(base_family = "Arial Narrow") +
theme(legend.position = "none") +
labs(title = "Cooccurrencias dentro de una oración", subtitle = "Nombres y Adjetivos")
install.packages("LexisPlotR")
library(LexisPlotR)
lexis_grid(year_start = 1920, year_end = 2020,
age_start = 0, age_end =100, delta=10)
sample(c("sol","aguila", replace=T)
sample(c("sol","aguila"), replace=T))
moneda<-c("Aguila", "Sol")
sample(c("Aguila", "Sol"), 1)
moneda<-c("Aguila", "Sol")
sample(c("Aguila", "Sol"), 10)
moneda<-c("Aguila", "Sol")
sample(c("Aguila", "Sol"),1)
tirar_moneda <- function(n) {
sample(c("Aguila", "Sol"), n, rep = T)
}
tirar_moneda(10)
moneda10000<- tirar_moneda(10000)
table(moneda10000)
prop.table(table(moneda10000))
moneda100000<- tirar_moneda(100000)
prop.table(table(moneda100000))
library(readr)
pob_mit_proyecciones <- read_csv("C:/Users/anaes/Downloads/pob_mit_proyecciones.csv",
locale = locale(encoding = "WINDOWS-1252"))
View(pob_mit_proyecciones)
library(tidyverse)
library(readxl)
library(writexl)
library(tidyverse)
pot_mit
pob_mit_proyecciones <- read_csv("C:/Users/anaes/Downloads/pob_mit_proyecciones.csv",
locale = locale(encoding = "WINDOWS-1252"))
pob_mit_proyecciones %>%
filter(AÑO>2009)
library(magrittr)
library(magrittr)
library(readxl)
library(writexl)
library(tidyverse)
pot_mit
pob_mit_proyecciones <- read_csv("C:/Users/anaes/Downloads/pob_mit_proyecciones.csv",
locale = locale(encoding = "WINDOWS-1252"))
pob_mit_proyecciones %<>%
filter(AÑO>2009)
View(pob_mit_proyecciones)
writexl::write_xlsx(pob_mit_proyecciones,"C:/Users/anaes/Downloads/pob_mit_proyecciones2.csv")
def_edad_proyecciones_n <- read_csv("C:/Users/anaes/def_edad_proyecciones_n.csv",
locale = locale(encoding = "WINDOWS-1252"))
def_edad_proyecciones_n %<>%
filter(AÑO>2009)
writexl::write_xlsx(pob_mit_proyecciones,"C:/Users/anaes/Downloads/def_edad_proyecciones_n2.csv")
def_edad_proyecciones_n <- read_csv("C:/Users/anaes/Downloads/def_edad_proyecciones_n.csv",
locale = locale(encoding = "WINDOWS-1252"))
def_edad_proyecciones_n %<>%
filter(AÑO>2009)
writexl::write_xlsx(pob_mit_proyecciones,"C:/Users/anaes/Downloads/def_edad_proyecciones_n2.csv")
library(readr)
def_edad_proyecciones_n <- read_csv("C:/Users/anaes/Downloads/def_edad_proyecciones_n.csv")
View(def_edad_proyecciones_n)
def_edad_proyecciones_n <- read_csv("C:/Users/anaes/Downloads/def_edad_proyecciones_n.csv")
def_edad_proyecciones_n %<>%
filter(AÑO>2009)
writexl::write_xlsx(pob_mit_proyecciones,"C:/Users/anaes/Downloads/def_edad_proyecciones_n2.csv")
library(readr)
prot_san_sal_ev_sex_proyecciones <- read_csv("C:/Users/anaes/Downloads/prot_san_sal_ev_sex_proyecciones.csv")
View(prot_san_sal_ev_sex_proyecciones)
library(magrittr)
library(readxl)
library(writexl)
library(tidyverse)
pot_mit
pob_mit_proyecciones <- read_csv("C:/Users/anaes/Downloads/pob_mit_proyecciones.csv",
locale = locale(encoding = "WINDOWS-1252"))
pob_mit_proyecciones %<>%
filter(AÑO>2009)
writexl::write_xlsx(pob_mit_proyecciones,"C:/Users/anaes/Downloads/pob_mit_proyecciones2.csv")
def_edad_proyecciones_n <- read_csv("C:/Users/anaes/Downloads/def_edad_proyecciones_n.csv")
def_edad_proyecciones_n %<>%
filter(AÑO>2009)
writexl::write_xlsx(def_edad_proyecciones_n ,"C:/Users/anaes/Downloads/def_edad_proyecciones_n2.csv")
prot_san_sal_ev_sex_proyecciones <- read_csv("C:/Users/anaes/Downloads/prot_san_sal_ev_sex_proyecciones.csv")
View(prot_san_sal_ev_sex_proyecciones)
prot_san_sal_ev_sex_proyecciones %<>%
filter(X1>2009)
writexl::write_xlsx(prot_san_sal_ev_sex_proyecciones,"C:/Users/anaes/Downloads/prot_san_sal_ev_sex_proyecciones_n2.csv")
library(readr)
ind_dem_proyecciones <- read_csv("C:/Users/anaes/Downloads/ind_dem_proyecciones.csv",
locale = locale(encoding = "WINDOWS-1252"))
View(ind_dem_proyecciones)
source('C:/Users/anaes/Dropbox/FCPyS-2021-ii/SOCDEM/mortalidad.R', echo=TRUE)
rm(list=ls())
source('C:/Users/anaes/Dropbox/FCPyS-2021-ii/SOCDEM/mortalidad.R', echo=TRUE)
View(prot_san_sal_ev_sex_proyecciones)
View(pob_mit_proyecciones)
View(ind_dem_proyecciones)
View(def_edad_proyecciones_n)
library(magrittr)
library(readxl)
library(writexl)
library(tidyverse)
rm(list=ls())
pob_mit_proyecciones <- read_csv("C:/Users/anaes/Downloads/pob_mit_proyecciones.csv",
locale = locale(encoding = "WINDOWS-1252"))
pob_mit_proyecciones %<>%
filter(AÑO>2009)
writexl::write_xlsx(pob_mit_proyecciones,"C:/Users/anaes/Downloads/pob_mit_proyecciones2.csv")
def_edad_proyecciones_n <- read_csv("C:/Users/anaes/Downloads/def_edad_proyecciones_n.csv")
def_edad_proyecciones_n %<>%
filter(AÑO>2009)
writexl::write_xlsx(def_edad_proyecciones_n ,"C:/Users/anaes/Downloads/def_edad_proyecciones_n2.csv")
prot_san_sal_ev_sex_proyecciones <- read_csv("C:/Users/anaes/Downloads/prot_san_sal_ev_sex_proyecciones.csv")
View(prot_san_sal_ev_sex_proyecciones)
prot_san_sal_ev_sex_proyecciones %<>%
filter(X1>2009)
writexl::write_xlsx(prot_san_sal_ev_sex_proyecciones,"C:/Users/anaes/Downloads/prot_san_sal_ev_sex_proyecciones_n2.csv")
ind_dem_proyecciones <- read_csv("C:/Users/anaes/Downloads/ind_dem_proyecciones.csv",
locale = locale(encoding = "WINDOWS-1252"))
View(ind_dem_proyecciones)
ind_dem_proyecciones %<>%
filter(AÑO>2009)
writexl::write_xlsx(ind_dem_proyecciones,"C:/Users/anaes/Downloads/ind_dem_proyecciones2.csv")
source('C:/Users/anaes/Dropbox/FCPyS-2021-ii/SOCDEM/mortalidad.R', echo=TRUE)
source('C:/Users/anaes/Dropbox/FCPyS-2021-ii/SOCDEM/mortalidad.R', echo=TRUE)
View(ind_dem_proyecciones)
def_edad_proyecciones_n %<>%
filter(AÑO>2009)
writexl::write_xlsx(def_edad_proyecciones_n ,"C:/Users/anaes/Downloads/def_edad_proyecciones_n2.xlsx")
exit
install.packages("simPop")
## example from the world bank
x <- data.frame(age=as.factor(c(
"0-4",
"5-9","10-14","15-19", "20-24",
"25-29","30-34","35-39","40-44","45-49",
"50-54","55-59","60-64","65-69","77-74","75-79","80+"
)),
pop=c(1971990, 2095820,2157190, 2094110,2116580,   2003840, 1785690,
1502990, 1214170, 796934,  627551,  530305, 488014,
364498, 259029,158047,  125941)
)
s  <- sprague(x[,2])
s
all.equal(sum(s), sum(x[,2]))
x <- data.frame(age=as.factor(c(
"0-4",
"5-9","10-14","15-19", "20-24",
"25-29","30-34","35-39","40-44","45-49",
"50-54","55-59","60-64","65-69","77-74","75-79","80+"
)),
pop=c(1971990, 2095820,2157190, 2094110,2116580,   2003840, 1785690,
1502990, 1214170, 796934,  627551,  530305, 488014,
364498, 259029,158047,  125941)
)
library(simPop)
s  <- sprague(x[,2])
s
all.equal(sum(s), sum(x[,2]))
## example from the world bank
x <- data.frame(age=as.factor(c(
"0-4",
"5-9","10-14","15-19", "20-24",
"25-29","30-34","35-39","40-44","45-49",
"50-54","55-59","60-64","65-69","77-74","75-79","80+"
)),
pop=c(1971990, 2095820,2157190, 2094110,2116580,   2003840, 1785690,
1502990, 1214170, 796934,  627551,  530305, 488014,
364498, 259029,158047,  125941)
)
s  <- sprague(x[,2])
s
all.equal(sum(s), sum(x[,2]))
library(magrittr)
library(readxl)
library(writexl)
library(tidyverse)
rm(list=ls())
pob_mit_proyecciones <- read_csv("C:/Users/anaes/Downloads/tef_nac_proyecciones.csv",
locale = locale(encoding = "WINDOWS-1252"))
library(magrittr)
library(readxl)
library(writexl)
library(tidyverse)
rm(list=ls())
tef_nac_proyecciones <- read_csv("C:/Users/anaes/Downloads/tef_nac_proyecciones.csv",
locale = locale(encoding = "WINDOWS-1252"))
tef_nac_proyecciones %<>%
filter(AÑO>2009 & AÑO<2021)
writexl::write_xlsx(tef_nac_proyecciones,"C:/Users/anaes/Downloads/tef_nac_proyecciones3.xlsx")
sample(moneda,10, rep=T)
moneda<-c("Aguila", "Sol")
sample(moneda,10, rep=T)
moneda<-c("Aguila", "Sol")
table(sample(moneda,10, rep=T))
getwd()
knitr::purl("P2.Rmd", "P2.R")
setwd("C:/Users/anaes/Dropbox/2021/CursoR-posgrado")
knitr::purl("P2.Rmd", "P2.R")
knitr::purl("P2.Rmd", "P2.R")
esquisse:::esquisser()
install.packages("esquisse")
install.packages("esquisse")
install.packages("esquisse")
install.packages("esquisse")
install.packages("esquisse")
install.packages("esquisse")
esquisse:::esquisser()
setwd("C:/Users/anaes/Dropbox")
setwd("C:/Users/anaes/Dropbox/2021/CursoR-posgrado")
esquisse:::esquisser()
esquisse:::esquisser()
esquisse:::esquisser()
esquisse:::esquisser()
esquisse:::esquisser()
